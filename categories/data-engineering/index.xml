<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Data Engineering - Category - Datamind</title>
        <link>https://yjinheon.github.io/categories/data-engineering/</link>
        <description>Data Engineering - Category - Datamind</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright ©, Yjinheon the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Wed, 15 May 2024 15:52:55 &#43;0900</lastBuildDate><atom:link href="https://yjinheon.github.io/categories/data-engineering/" rel="self" type="application/rss+xml" /><item>
    <title>Hello World</title>
    <link>https://yjinheon.github.io/posts/02.de/hello-world/</link>
    <pubDate>Wed, 15 May 2024 15:52:55 &#43;0900</pubDate><author>
        <name>datamind</name>
    </author><guid>https://yjinheon.github.io/posts/02.de/hello-world/</guid>
    <description><![CDATA[테스트 계시물]]></description>
</item><item>
    <title>[Docker]Docker 자주쓰는 명령어</title>
    <link>https://yjinheon.github.io/posts/02.de/de-docker-commands/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate><author>
        <name>datamind</name>
    </author><guid>https://yjinheon.github.io/posts/02.de/de-docker-commands/</guid>
    <description><![CDATA[도커 이미지 docker images1docker images 도커 컨테이너 docker run: 도커 이미지 실행
1docker run -v [로컬경로]:/[컨테이너경로] -d -p 8080:8080 yjinheon/test:latest docker ps1docker ps 2 3# 모든 컨테이너를 보여준다 4docker ps -a 1# 실행중인 docker containner id 전부 가져오기 2docker ps | awk &#39;NR &gt; 1 {print $1}&#39; 3 4# 맨위의 docker container 하나만 가져오기 5docker ps | awk &#39;NR &gt; 1 {print $1; exit}&#39; docker rm1# 컨테이너 ID로 삭제 2docker rm [컨테이너 ID] 3 4# 컨테이너 명으로 삭제 5docker rm [컨네이너 명] 6 7# 실행중인 컨테이너 강제삭제 8 9docker rm -f [컨테이너명] id가 none인 도커 이미지 전부 삭제 1docker rmi $(docker images -a|grep &#34;&lt;none&gt;&#34;|awk &#39;$1==&#34;&lt;none&gt;&#34; {print $3}&#39;) 도커 볼륨 docker volume1docker create volume [볼륨명] References https://docs.]]></description>
</item></channel>
</rss>
