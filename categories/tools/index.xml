<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Tools - Category - Datamind</title>
        <link>https://yjinheon.github.io/categories/tools/</link>
        <description>Tools - Category - Datamind</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright ©, Yjinheon the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Sun, 16 Jun 2024 14:52:55 &#43;0900</lastBuildDate><atom:link href="https://yjinheon.github.io/categories/tools/" rel="self" type="application/rss+xml" /><item>
    <title>[Firefox]FireFox 단축키 정리하기</title>
    <link>https://yjinheon.github.io/posts/90.tools/firefox/firefox-shortcut/</link>
    <pubDate>Sun, 16 Jun 2024 14:52:55 &#43;0900</pubDate><author>
        <name>datamind</name>
    </author><guid>https://yjinheon.github.io/posts/90.tools/firefox/firefox-shortcut/</guid>
    <description><![CDATA[<h2 id="개요" class="headerLink">
    <a href="#%ea%b0%9c%ec%9a%94" class="header-mark"></a>개요</h2><p>자주 쓰는 Firefox 단축키를 생각날때마다 추가한다.</p>
<h2 id="단축키" class="headerLink">
    <a href="#%eb%8b%a8%ec%b6%95%ed%82%a4" class="header-mark"></a>단축키</h2><h3 id="탭관련" class="headerLink">
    <a href="#%ed%83%ad%ea%b4%80%eb%a0%a8" class="header-mark"></a>탭관련</h3><ul>
<li><code>ctrl+w</code> : 현재 탭 닫기</li>
<li><code>ctrl+tab</code> : 다음 탭으로 이동</li>
<li><code>ctrl+pageup</code> : 다음 탭으로 이동</li>
<li><code>ctrl+shift+tab</code> : 이전 탭으로 이동</li>
<li><code>ctrl+pagedown</code> : 이전 탭으로 이동</li>
<li><code>ctrl+t</code> : 새 탭 열기</li>
<li><code>ctrl+w</code> : 현재 탭 닫기</li>
<li><code>ctrl+shift+t</code> : 닫은 탭 다시 열기</li>
<li><code>ctrl+1,2,3,4,5,6,7,8,9</code> : 1번부터 9번까지 탭으로 이동</li>
</ul>]]></description>
</item><item>
    <title>[obsidian]obsidian 커스텀 단축키</title>
    <link>https://yjinheon.github.io/posts/90.tools/obsidian/obsidian-shortcut/</link>
    <pubDate>Thu, 16 May 2024 15:52:55 &#43;0900</pubDate><author>
        <name>datamind</name>
    </author><guid>https://yjinheon.github.io/posts/90.tools/obsidian/obsidian-shortcut/</guid>
    <description><![CDATA[<h2 id="단축키" class="headerLink">
    <a href="#%eb%8b%a8%ec%b6%95%ed%82%a4" class="header-mark"></a>단축키</h2><h3 id="커스텀-단축키" class="headerLink">
    <a href="#%ec%bb%a4%ec%8a%a4%ed%85%80-%eb%8b%a8%ec%b6%95%ed%82%a4" class="header-mark"></a>커스텀 단축키</h3><ul>
<li><code>ctrl +shift + y</code> : 라이브 프리뷰 &lt;-&gt; 소스코드 토글</li>
<li><code>alt + q</code> : 백틱으로 단어 감싸기</li>
<li><code>ctrl+shift+L</code> : 개요 창 표시</li>
<li><code>ctrl+f9</code> : 왼쪽 사이드바 토글</li>
<li><code>ctrl+f10</code> : 오른쪽 사이드바 토글</li>
<li><code>ctrl+shift+w</code> : 다른 패널 모두 닫기</li>
</ul>
<h2 id="추가-필요기능" class="headerLink">
    <a href="#%ec%b6%94%ea%b0%80-%ed%95%84%ec%9a%94%ea%b8%b0%eb%8a%a5" class="header-mark"></a>추가 필요기능</h2><ul>
<li>수정날짜기준 Sort 기능(플러그인을 찾거나 다른 방법을 찾기)</li>
<li>파일링크 단순화</li>
</ul>]]></description>
</item><item>
    <title>[Tools] Neovim 단축키 정리</title>
    <link>https://yjinheon.github.io/posts/90.tools/tools-vim/</link>
    <pubDate>Sun, 02 May 2021 15:52:55 &#43;0900</pubDate><author>
        <name>datamind</name>
    </author><guid>https://yjinheon.github.io/posts/90.tools/tools-vim/</guid>
    <description><![CDATA[<h2 id="intro" class="headerLink">
    <a href="#intro" class="header-mark"></a>Intro</h2><p>간단한 파이썬 코딩을 할 경우에는 주로 Neovim을 사용하고 있다. Neovim은
플러그인을 이것저것 설치하면서 자신만의 IDE를 만들 수 있다는 장점이 있지만 나는
아직 그런 커스텀에 익숙하지 않아서 <code>LazyVim</code> 라는 Neovim 기반 유사 IDE 플러그인을
깔고 거기에 필요한 플러그인을 추가하는 방식으로 사용하고 있다.</p>
<p>이 글에서는 내가 주로 사용하는 Nvim 키 바인딩을 정리하고 업데이트 할 예정이다.</p>
<h2 id="자주-사용하는-단축키" class="headerLink">
    <a href="#%ec%9e%90%ec%a3%bc-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%eb%8b%a8%ec%b6%95%ed%82%a4" class="header-mark"></a>자주 사용하는 단축키</h2><ul>
<li><code>:Vista </code> : 파일 스트럭쳐 확인</li>
<li><code>&lt;leader&gt;sw</code> : telescope select word.</li>
</ul>
<h3 id="필요한-기능" class="headerLink">
    <a href="#%ed%95%84%ec%9a%94%ed%95%9c-%ea%b8%b0%eb%8a%a5" class="header-mark"></a>필요한 기능</h3><ul>
<li>열편집 (sublimetext같은거)</li>
<li>다중 편집</li>
</ul>
<h2 id="reference" class="headerLink">
    <a href="#reference" class="header-mark"></a>Reference</h2><ul>
<li><a
  href="https://github.com/folke/which-key.nvim"
  
     target="_blank"
  
  rel="noopener noreferrer"
  
>https://github.com/folke/which-key.nvim</a>
</li>
<li><a
  href="https://github.com/nvim-neo-tree/neo-tree.nvim"
  
     target="_blank"
  
  rel="noopener noreferrer"
  
>https://github.com/nvim-neo-tree/neo-tree.nvim</a>
 file structure 확인</li>
<li><a
  href="https://github.com/liuchengxu/vista.vim"
  
     target="_blank"
  
  rel="noopener noreferrer"
  
>https://github.com/liuchengxu/vista.vim</a>
</li>
<li><a
  href="https://learnbyexample.github.io/tips/vim-tip-14/"
  
     target="_blank"
  
  rel="noopener noreferrer"
  
>https://learnbyexample.github.io/tips/vim-tip-14/</a>
</li>
</ul>]]></description>
</item><item>
    <title>[IntelliJ]단축키 정리</title>
    <link>https://yjinheon.github.io/posts/90.tools/intellij/intellij-shortcut/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate><author>
        <name>datamind</name>
    </author><guid>https://yjinheon.github.io/posts/90.tools/intellij/intellij-shortcut/</guid>
    <description><![CDATA[<h2 id="개요" class="headerLink">
    <a href="#%ea%b0%9c%ec%9a%94" class="header-mark"></a>개요</h2><ul>
<li>자주 쓰는 Intellij 단축키를 생각날때마다 추가한다.</li>
<li>VScode Keymap 기준으로 추가한다.</li>
<li>개인이 커스텀해서 쓰는 단축키라 Intellij 기본 단축키와 다른 단축키가 일부 있다.</li>
</ul>
<h2 id="단축키" class="headerLink">
    <a href="#%eb%8b%a8%ec%b6%95%ed%82%a4" class="header-mark"></a>단축키</h2><h3 id="뷰-관련" class="headerLink">
    <a href="#%eb%b7%b0-%ea%b4%80%eb%a0%a8" class="header-mark"></a>뷰 관련</h3><ul>
<li><code>ctrl+w</code> : 현재 편집기 닫기</li>
</ul>
<h3 id="편집-관련" class="headerLink">
    <a href="#%ed%8e%b8%ec%a7%91-%ea%b4%80%eb%a0%a8" class="header-mark"></a>편집 관련</h3><ul>
<li><code>alt+insert</code> -&gt; <code>ctrl+shift+]</code> : 커서 멈춤이슈로 변경</li>
<li><code>ctrl+e</code> : window switcher 열기</li>
<li><code>ctrl+enter</code> : window switcher에서 파일 선택</li>
<li><code>ctrl+shift+r</code> : 선택한 부분 리팩토링 옵션 표시</li>
<li><code>ctrl+shift+alt+n</code> : inline 변수 추출</li>
<li><code>ctrl+alt+t</code> : surround with. if, try catch 등 감쌀 때 사용</li>
<li><code>shift+shift</code> : 전체 검색</li>
<li><code>ctrl+alt+v</code> : introduce variable</li>
<li><code>ctrl+space</code> : 만능 단축키</li>
<li><code>ctrl+shift+ i</code> : 생성자, getter setter 등 생성</li>
<li><code>alt+insert</code> : 편집기에서 사용(생성자, getter setter 등 생성)</li>
</ul>
<!--

## 단축키
## VM 옵션

### 일반설정

-server : JVM이 서버 최적화된 HotSpot 컴파일러를 사용
-Xms4096m : 초기 힙 크기
-Xmx4096m : 최대 힙 크기

### 메모리 관리

-XX:NewRatio=3
-Xss16m : 각 스레드의 스택 크기

### 성능 최적화

-XX:+AlwaysPreTouch : 런타임 중 메모리 할당에 소요되는 시간을 줄여 성능을 향상
-XX:+TieredCompilation : JVM은 자주 사용되는 메서드를 여러 번 컴파일하여 성능 향상, 실행 속도 향상
-XX:ReservedCodeCacheSize=512m : 예약된 코드 캐시 크기
-XX:SoftRefLRUPolicyMSPerMB=50 : SoftReference Least Recently Used(LRU) 정책을 조정
-XX:+UseCodeCacheFlushing : 메모리가 부족할 때 코드 캐시를 지워 특정 시나리오에서 성능을 향상

### 시스템/어플리케이션 속성

-Dsun.io.useCanonCaches=false-ea : 파일 경로에 대한 정규화 캐시 사용을 비활성화하여 특정 환경에서 성능을 향상
-XX:CICompilerCount=4 : 백그라운드 컴파일 스레드 수
-Dsun.io.useCanonPrefixCache=false : 정규화를 위한 접두사 캐시 사용을 비활성화하여 특정 조건에서 성능을 향상
-XX:+HeapDumpOnOutOfMemoryError : OutOfMemoryError가 발생할 때 힙 덤프 파일을 생성하여 메모리 관련 문제 해결에 도움
-XX:-OmitStackTraceInFastThrow : 빠른 throw에서도 예외 메시지에 스택 추적을 포함
-Djdk.attach.allowAttachSelf=true : 디버깅 목적으로 JVM이 자체에 연결
-Dkotlinx.coroutines.debug=off : 프로덕션 환경에서 오버헤드를 줄이기 위해 Kotlin 코루틴에 대한 디버깅을 비활성화
-Djdk.module.illegalAccess.silent=true : 특정 타사 라이브러리에서 발생할 수 있는 불법 모듈 접근에 대한 경고를 표시하지 않음
-Dfile.encoding=UTF-8 : 기본 파일 인코딩
-XX:+UseG1GC : 메모리 사용 패턴이 변동하는 IDE와 같은 애플리케이션에 더 적합한 G1(Garbage-First) 가비지 컬렉터를 사용

-->]]></description>
</item><item>
    <title>[Project]테스트</title>
    <link>https://yjinheon.github.io/projets/01.ariflow_pipeline/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate><author>
        <name>datamind</name>
    </author><guid>https://yjinheon.github.io/projets/01.ariflow_pipeline/</guid>
    <description><![CDATA[<p>프로젝트</p>]]></description>
</item></channel>
</rss>
